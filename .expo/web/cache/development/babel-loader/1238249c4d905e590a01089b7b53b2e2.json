{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\olayi\\\\Consults1\\\\reactnative\\\\MoveIt\\\\App.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Geolocation from 'react-native-geolocation-service';\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport DestinationSearch from \"./src/screens/DestinationSearch\";\nimport SearchResults from \"./src/screens/SearchResults\";\n{}\n\nvar App = function App() {\n  var androidPermission = function androidPermission() {\n    var granted;\n    return _regeneratorRuntime.async(function androidPermission$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION, {\n              title: \"MoveIt Location Permission\",\n              message: \"MoveIt needs access to your Location for better experience.\",\n              buttonNeutral: \"Ask Me Later\",\n              buttonNegative: \"Cancel\",\n              buttonPositive: \"OK\"\n            }));\n\n          case 3:\n            granted = _context.sent;\n\n            if (granted === PermissionsAndroid.RESULTS.GRANTED) {\n              console.log(\"You can use the Location\");\n            } else {\n              console.log(\"Location permission denied\");\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.warn(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    if (Platform.OS === 'android') {\n      androidPermission();\n    } else {\n      Geolocation.requestAuthorization();\n    }\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(StatusBar, {\n    barStyle: \"dark-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), React.createElement(DestinationSearch, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/olayi/Consults1/reactnative/MoveIt/App.js"],"names":["React","useEffect","Geolocation","HomeScreen","DestinationSearch","SearchResults","App","androidPermission","PermissionsAndroid","request","PERMISSIONS","ACCESS_FINE_LOCATION","title","message","buttonNeutral","buttonNegative","buttonPositive","granted","RESULTS","GRANTED","console","log","warn","Platform","OS","requestAuthorization"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,OAAOC,WAAP,MAAwB,kCAAxB;AAEA,OAAOC,UAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,aAAP;AAEA,CAA+E;;AAE/E,IAAMC,GAAqB,GAAG,SAAxBA,GAAwB,GAAM;AAEnC,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEEC,kBAAkB,CAACC,OAAnB,CACpBD,kBAAkB,CAACE,WAAnB,CAA+BC,oBADX,EAEpB;AACEC,cAAAA,KAAK,EAAE,4BADT;AAEEC,cAAAA,OAAO,EACL,6DAHJ;AAIEC,cAAAA,aAAa,EAAE,cAJjB;AAKEC,cAAAA,cAAc,EAAE,QALlB;AAMEC,cAAAA,cAAc,EAAE;AANlB,aAFoB,CAFF;;AAAA;AAEdC,YAAAA,OAFc;;AAapB,gBAAIA,OAAO,KAAKT,kBAAkB,CAACU,OAAnB,CAA2BC,OAA3C,EAAoD;AAClDC,cAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,aAFD,MAEO;AACLD,cAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD;;AAjBmB;AAAA;;AAAA;AAAA;AAAA;AAmBpBD,YAAAA,OAAO,CAACE,IAAR;;AAnBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAuBCrB,EAAAA,SAAS,CAAE,YAAM;AACf,QAAIsB,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AAC7BjB,MAAAA,iBAAiB;AAClB,KAFD,MAEO;AAELL,MAAAA,WAAW,CAACuB,oBAAZ;AACD;AACF,GAPQ,EAON,EAPM,CAAT;AASA,SACE,0CACE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAxCD;;AA0CA,eAAenB,GAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {StatusBar, PermissionsAndroid, Platform} from 'react-native';\r\nimport Geolocation from 'react-native-geolocation-service';\r\n\r\nimport HomeScreen from './src/screens/HomeScreen';\r\nimport DestinationSearch from './src/screens/DestinationSearch';\r\nimport SearchResults from './src/screens/SearchResults';\r\n\r\n{/* navigator.geolocation = require('@react-native-community/geolocation'); */}\r\n\r\nconst App: () => React$Node = () => {\r\n\r\n const androidPermission = async () => {\r\n    try {\r\n       const granted = await PermissionsAndroid.request(\r\n         PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,\r\n         {\r\n           title: \"MoveIt Location Permission\",\r\n           message:\r\n             \"MoveIt needs access to your Location for better experience.\",\r\n           buttonNeutral: \"Ask Me Later\",\r\n           buttonNegative: \"Cancel\",\r\n           buttonPositive: \"OK\"\r\n         }\r\n       );\r\n       if (granted === PermissionsAndroid.RESULTS.GRANTED) {\r\n         console.log(\"You can use the Location\");\r\n       } else {\r\n         console.log(\"Location permission denied\");\r\n       }\r\n     } catch (err) {\r\n       console.warn(err);\r\n     }\r\n  }\r\n\r\n  useEffect( () => {\r\n    if (Platform.OS === 'android') {\r\n      androidPermission();\r\n    } else {\r\n      // IOS\r\n      Geolocation.requestAuthorization();\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <StatusBar barStyle=\"dark-content\" />\r\n      <DestinationSearch />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}