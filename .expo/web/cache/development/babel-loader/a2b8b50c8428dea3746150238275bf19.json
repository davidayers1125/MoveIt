{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\olayi\\\\Consults1\\\\reactnative\\\\MoveIt\\\\src\\\\screens\\\\DestinationSearch\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\nimport styles from \"./styles\";\nimport PlaceRow from \"../../screens/DestinationSearch/PlaceRow\";\n\nvar DestinationSearch = function DestinationSearch(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      originPlace = _useState2[0],\n      setOriginPlace = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      destinationPlace = _useState4[0],\n      setDestinationPlace = _useState4[1];\n\n  useEffect(function () {\n    console.warn('useEffect is called');\n\n    if (originPlace, destinationPlace) {\n      console.warn('Redirect to results');\n    }\n  }, [originPlace, destinationPlace]);\n  return React.createElement(SafeAreaView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(GooglePlacesAutocomplete, {\n    placeholder: \"From?\",\n    onPress: function onPress(data) {\n      var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      setOriginPlace({\n        value: {\n          data: data,\n          details: details\n        }\n      });\n      console.log(data, details);\n    },\n    enablePoweredByContainer: false,\n    suppressDefaultStyles: true,\n    styles: {\n      textInput: styles.textInput,\n      container: styles.autoCompleteContainer,\n      listView: styles.listView,\n      separator: styles.separator\n    },\n    fetchDetails: true,\n    query: {\n      key: 'AIzaSyAvarpZ4A8Gy3qX1SBF_RtyoTsabxo8sZY',\n      language: 'en'\n    },\n    renderRow: function renderRow(data) {\n      return React.createElement(PlaceRow, {\n        data: data,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 52\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }), React.createElement(GooglePlacesAutocomplete, {\n    placeholder: \"Where To?\",\n    onPress: function onPress(data) {\n      var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      setDestinationPlace({\n        value: {\n          data: data,\n          details: details\n        }\n      });\n      console.log(data, details);\n    },\n    enablePoweredByContainer: false,\n    suppressDefaultStyles: true,\n    styles: {\n      textInput: styles.textInput,\n      container: _objectSpread(_objectSpread({}, styles.autoCompleteContainer), {}, {\n        top: 55\n      }),\n      separator: styles.separator\n    },\n    fetchDetails: true,\n    query: {\n      key: 'AIzaSyAvarpZ4A8Gy3qX1SBF_RtyoTsabxo8sZY',\n      language: 'en'\n    },\n    renderRow: function renderRow(data) {\n      return React.createElement(PlaceRow, {\n        data: data,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 52\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.circle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.line,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.square,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default DestinationSearch;","map":{"version":3,"sources":["C:/Users/olayi/Consults1/reactnative/MoveIt/src/screens/DestinationSearch/index.js"],"names":["React","useEffect","useState","GooglePlacesAutocomplete","styles","PlaceRow","DestinationSearch","props","originPlace","setOriginPlace","destinationPlace","setDestinationPlace","console","warn","container","data","details","value","log","textInput","autoCompleteContainer","listView","separator","key","language","top","circle","line","square"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {View, TextInput, SafeAreaView} from 'react-native';\r\nimport {GooglePlacesAutocomplete} from 'react-native-google-places-autocomplete';\r\nimport styles from './styles';\r\nimport PlaceRow from '../../screens/DestinationSearch/PlaceRow';\r\n\r\nconst DestinationSearch = (props) => {\r\n  const [originPlace, setOriginPlace] = useState( null );\r\n  const [destinationPlace, setDestinationPlace] = useState( null );\r\n\r\n    useEffect( () => {\r\n      console.warn( 'useEffect is called');\r\n      if (originPlace, destinationPlace) {\r\n        console.warn( 'Redirect to results');\r\n      }\r\n    }, [originPlace, destinationPlace]);\r\n\r\n    return (\r\n      <SafeAreaView>\r\n        <View style={styles.container}>\r\n\r\n          <GooglePlacesAutocomplete\r\n            placeholder=\"From?\"\r\n            onPress={(data :GooglePlaceData , details :GooglePlaceDetails | null = null,) => {\r\n              setOriginPlace({value: {data, details}});\r\n              console.log(data, details);\r\n            }}\r\n            enablePoweredByContainer={false}\r\n            suppressDefaultStyles\r\n            styles={{\r\n              textInput: styles.textInput,\r\n              container: styles.autoCompleteContainer,\r\n              listView: styles.listView,\r\n              separator: styles.separator,\r\n            }}\r\n            fetchDetails\r\n            query={{\r\n              key: 'AIzaSyAvarpZ4A8Gy3qX1SBF_RtyoTsabxo8sZY',\r\n              language: 'en',\r\n            }}\r\n            renderRow={(data :GooglePlaceData ) => <PlaceRow data={data} />}\r\n          />\r\n\r\n          <GooglePlacesAutocomplete\r\n            placeholder=\"Where To?\"\r\n            onPress={(data :GooglePlaceData , details :GooglePlaceDetails | null = null,) => {\r\n              setDestinationPlace({value: {data, details}});\r\n              console.log(data, details);\r\n            }}\r\n            enablePoweredByContainer={false}\r\n            suppressDefaultStyles\r\n            styles={{\r\n              textInput: styles.textInput,\r\n              container: {\r\n                ...styles.autoCompleteContainer,\r\n                top: 55,\r\n              },\r\n              separator: styles.separator,\r\n            }}\r\n            fetchDetails\r\n            query={{\r\n              key: 'AIzaSyAvarpZ4A8Gy3qX1SBF_RtyoTsabxo8sZY',\r\n              language: 'en',\r\n            }}\r\n            renderRow={(data :GooglePlaceData ) => <PlaceRow data={data} />}\r\n          />\r\n\r\n          {/* Circle near the Origin input */}\r\n          <View style={styles.circle} />\r\n\r\n          {/* Line between dots */}\r\n          <View style={styles.line} />\r\n\r\n          {/* Square near the Destination input */}\r\n          <View style={styles.square} />\r\n\r\n        </View>\r\n      </SafeAreaView>\r\n    );\r\n};\r\n\r\nexport default DestinationSearch;"]},"metadata":{},"sourceType":"module"}